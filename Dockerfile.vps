# Dockerfile otimizado para VPS com PostgreSQL externo
FROM node:18-alpine AS builder

WORKDIR /app

# Install dependencies
COPY package*.json ./
RUN npm ci

# Copy source and build
COPY . .
RUN npm run build

# Verify build
RUN ls -la dist/ && \
    test -f dist/index.html && \
    echo "Build verification successful" || (echo "Build verification failed" && exit 1)

# Production stage
FROM node:18-alpine

WORKDIR /app

# Install production dependencies only
COPY package*.json ./
RUN npm ci --only=production

# Copy built frontend and server files
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/server ./server

# Create logs directory
RUN mkdir -p /opt/sistema-gestao/logs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1))" || exit 1

# Start the server
CMD ["node", "server/index.js"]