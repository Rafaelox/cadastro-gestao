# Dockerfile otimizado para VPS com PostgreSQL externo
FROM node:18-alpine AS builder

WORKDIR /app

# Install dependencies
COPY package*.json ./
RUN npm ci

# Copy source and build
COPY . .
RUN npm run build

# Verify build
RUN ls -la dist/ && \
    test -f dist/index.html && \
    echo "Build verification successful" || (echo "Build verification failed" && exit 1)

# Production stage
FROM nginx:alpine

# Install dependencies for health checks
RUN apk add --no-cache curl

# Copy built files
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Create health endpoint
RUN echo '<!DOCTYPE html><html><body><h1>OK</h1></body></html>' > /usr/share/nginx/html/health

# Create logs directory
RUN mkdir -p /opt/sistema-gestao/logs && \
    chown -R nginx:nginx /opt/sistema-gestao/logs

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost/health || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]